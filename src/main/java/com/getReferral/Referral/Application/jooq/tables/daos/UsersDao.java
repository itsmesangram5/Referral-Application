/*
 * This file is generated by jOOQ.
 */
package com.getReferral.Referral.Application.jooq.tables.daos;


import com.getReferral.Referral.Application.jooq.tables.Users;
import com.getReferral.Referral.Application.jooq.tables.records.UsersRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Repository
public class UsersDao extends DAOImpl<UsersRecord, com.getReferral.Referral.Application.jooq.tables.pojos.Users, Integer> {

    /**
     * Create a new UsersDao without any configuration
     */
    public UsersDao() {
        super(Users.USERS, com.getReferral.Referral.Application.jooq.tables.pojos.Users.class);
    }

    /**
     * Create a new UsersDao with an attached configuration
     */
    @Autowired
    public UsersDao(Configuration configuration) {
        super(Users.USERS, com.getReferral.Referral.Application.jooq.tables.pojos.Users.class, configuration);
    }

    @Override
    public Integer getId(com.getReferral.Referral.Application.jooq.tables.pojos.Users object) {
        return object.getUserId();
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.getReferral.Referral.Application.jooq.tables.pojos.Users> fetchRangeOfUserId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Users.USERS.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<com.getReferral.Referral.Application.jooq.tables.pojos.Users> fetchByUserId(Integer... values) {
        return fetch(Users.USERS.USER_ID, values);
    }

    /**
     * Fetch a unique record that has <code>user_id = value</code>
     */
    public com.getReferral.Referral.Application.jooq.tables.pojos.Users fetchOneByUserId(Integer value) {
        return fetchOne(Users.USERS.USER_ID, value);
    }

    /**
     * Fetch a unique record that has <code>user_id = value</code>
     */
    public Optional<com.getReferral.Referral.Application.jooq.tables.pojos.Users> fetchOptionalByUserId(Integer value) {
        return fetchOptional(Users.USERS.USER_ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.getReferral.Referral.Application.jooq.tables.pojos.Users> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.getReferral.Referral.Application.jooq.tables.pojos.Users> fetchByName(String... values) {
        return fetch(Users.USERS.NAME, values);
    }

    /**
     * Fetch records that have <code>email_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.getReferral.Referral.Application.jooq.tables.pojos.Users> fetchRangeOfEmailId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.EMAIL_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>email_id IN (values)</code>
     */
    public List<com.getReferral.Referral.Application.jooq.tables.pojos.Users> fetchByEmailId(String... values) {
        return fetch(Users.USERS.EMAIL_ID, values);
    }

    /**
     * Fetch records that have <code>phone BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.getReferral.Referral.Application.jooq.tables.pojos.Users> fetchRangeOfPhone(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.PHONE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>phone IN (values)</code>
     */
    public List<com.getReferral.Referral.Application.jooq.tables.pojos.Users> fetchByPhone(String... values) {
        return fetch(Users.USERS.PHONE, values);
    }

    /**
     * Fetch records that have <code>password BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.getReferral.Referral.Application.jooq.tables.pojos.Users> fetchRangeOfPassword(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.PASSWORD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>password IN (values)</code>
     */
    public List<com.getReferral.Referral.Application.jooq.tables.pojos.Users> fetchByPassword(String... values) {
        return fetch(Users.USERS.PASSWORD, values);
    }

    /**
     * Fetch records that have <code>role BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.getReferral.Referral.Application.jooq.tables.pojos.Users> fetchRangeOfRole(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.ROLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>role IN (values)</code>
     */
    public List<com.getReferral.Referral.Application.jooq.tables.pojos.Users> fetchByRole(String... values) {
        return fetch(Users.USERS.ROLE, values);
    }
}
