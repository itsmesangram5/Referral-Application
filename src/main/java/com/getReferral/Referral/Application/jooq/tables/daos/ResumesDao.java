/*
 * This file is generated by jOOQ.
 */
package com.getReferral.Referral.Application.jooq.tables.daos;


import com.getReferral.Referral.Application.jooq.tables.Resumes;
import com.getReferral.Referral.Application.jooq.tables.records.ResumesRecord;

import java.math.BigDecimal;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Repository
public class ResumesDao extends DAOImpl<ResumesRecord, com.getReferral.Referral.Application.jooq.tables.pojos.Resumes, Integer> {

    /**
     * Create a new ResumesDao without any configuration
     */
    public ResumesDao() {
        super(Resumes.RESUMES, com.getReferral.Referral.Application.jooq.tables.pojos.Resumes.class);
    }

    /**
     * Create a new ResumesDao with an attached configuration
     */
    @Autowired
    public ResumesDao(Configuration configuration) {
        super(Resumes.RESUMES, com.getReferral.Referral.Application.jooq.tables.pojos.Resumes.class, configuration);
    }

    @Override
    public Integer getId(com.getReferral.Referral.Application.jooq.tables.pojos.Resumes object) {
        return object.getResumeId();
    }

    /**
     * Fetch records that have <code>resume_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.getReferral.Referral.Application.jooq.tables.pojos.Resumes> fetchRangeOfResumeId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Resumes.RESUMES.RESUME_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>resume_id IN (values)</code>
     */
    public List<com.getReferral.Referral.Application.jooq.tables.pojos.Resumes> fetchByResumeId(Integer... values) {
        return fetch(Resumes.RESUMES.RESUME_ID, values);
    }

    /**
     * Fetch a unique record that has <code>resume_id = value</code>
     */
    public com.getReferral.Referral.Application.jooq.tables.pojos.Resumes fetchOneByResumeId(Integer value) {
        return fetchOne(Resumes.RESUMES.RESUME_ID, value);
    }

    /**
     * Fetch a unique record that has <code>resume_id = value</code>
     */
    public Optional<com.getReferral.Referral.Application.jooq.tables.pojos.Resumes> fetchOptionalByResumeId(Integer value) {
        return fetchOptional(Resumes.RESUMES.RESUME_ID, value);
    }

    /**
     * Fetch records that have <code>applicant_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.getReferral.Referral.Application.jooq.tables.pojos.Resumes> fetchRangeOfApplicantId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Resumes.RESUMES.APPLICANT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>applicant_id IN (values)</code>
     */
    public List<com.getReferral.Referral.Application.jooq.tables.pojos.Resumes> fetchByApplicantId(Integer... values) {
        return fetch(Resumes.RESUMES.APPLICANT_ID, values);
    }

    /**
     * Fetch records that have <code>resume_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.getReferral.Referral.Application.jooq.tables.pojos.Resumes> fetchRangeOfResumeName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Resumes.RESUMES.RESUME_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>resume_name IN (values)</code>
     */
    public List<com.getReferral.Referral.Application.jooq.tables.pojos.Resumes> fetchByResumeName(String... values) {
        return fetch(Resumes.RESUMES.RESUME_NAME, values);
    }

    /**
     * Fetch records that have <code>branch BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.getReferral.Referral.Application.jooq.tables.pojos.Resumes> fetchRangeOfBranch(String lowerInclusive, String upperInclusive) {
        return fetchRange(Resumes.RESUMES.BRANCH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>branch IN (values)</code>
     */
    public List<com.getReferral.Referral.Application.jooq.tables.pojos.Resumes> fetchByBranch(String... values) {
        return fetch(Resumes.RESUMES.BRANCH, values);
    }

    /**
     * Fetch records that have <code>passout_yr BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.getReferral.Referral.Application.jooq.tables.pojos.Resumes> fetchRangeOfPassoutYr(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Resumes.RESUMES.PASSOUT_YR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>passout_yr IN (values)</code>
     */
    public List<com.getReferral.Referral.Application.jooq.tables.pojos.Resumes> fetchByPassoutYr(Integer... values) {
        return fetch(Resumes.RESUMES.PASSOUT_YR, values);
    }

    /**
     * Fetch records that have <code>exp_duration BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.getReferral.Referral.Application.jooq.tables.pojos.Resumes> fetchRangeOfExpDuration(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(Resumes.RESUMES.EXP_DURATION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>exp_duration IN (values)</code>
     */
    public List<com.getReferral.Referral.Application.jooq.tables.pojos.Resumes> fetchByExpDuration(BigDecimal... values) {
        return fetch(Resumes.RESUMES.EXP_DURATION, values);
    }
}
