/*
 * This file is generated by jOOQ.
 */
package com.getReferral.Referral.Application.jooq.tables.daos;


import com.getReferral.Referral.Application.jooq.tables.Referrer;
import com.getReferral.Referral.Application.jooq.tables.records.ReferrerRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Repository
public class ReferrerDao extends DAOImpl<ReferrerRecord, com.getReferral.Referral.Application.jooq.tables.pojos.Referrer, Integer> {

    /**
     * Create a new ReferrerDao without any configuration
     */
    public ReferrerDao() {
        super(Referrer.REFERRER, com.getReferral.Referral.Application.jooq.tables.pojos.Referrer.class);
    }

    /**
     * Create a new ReferrerDao with an attached configuration
     */
    @Autowired
    public ReferrerDao(Configuration configuration) {
        super(Referrer.REFERRER, com.getReferral.Referral.Application.jooq.tables.pojos.Referrer.class, configuration);
    }

    @Override
    public Integer getId(com.getReferral.Referral.Application.jooq.tables.pojos.Referrer object) {
        return object.getReferrerId();
    }

    /**
     * Fetch records that have <code>referrer_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.getReferral.Referral.Application.jooq.tables.pojos.Referrer> fetchRangeOfReferrerId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Referrer.REFERRER.REFERRER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>referrer_id IN (values)</code>
     */
    public List<com.getReferral.Referral.Application.jooq.tables.pojos.Referrer> fetchByReferrerId(Integer... values) {
        return fetch(Referrer.REFERRER.REFERRER_ID, values);
    }

    /**
     * Fetch a unique record that has <code>referrer_id = value</code>
     */
    public com.getReferral.Referral.Application.jooq.tables.pojos.Referrer fetchOneByReferrerId(Integer value) {
        return fetchOne(Referrer.REFERRER.REFERRER_ID, value);
    }

    /**
     * Fetch a unique record that has <code>referrer_id = value</code>
     */
    public Optional<com.getReferral.Referral.Application.jooq.tables.pojos.Referrer> fetchOptionalByReferrerId(Integer value) {
        return fetchOptional(Referrer.REFERRER.REFERRER_ID, value);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.getReferral.Referral.Application.jooq.tables.pojos.Referrer> fetchRangeOfUserId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Referrer.REFERRER.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<com.getReferral.Referral.Application.jooq.tables.pojos.Referrer> fetchByUserId(Integer... values) {
        return fetch(Referrer.REFERRER.USER_ID, values);
    }

    /**
     * Fetch a unique record that has <code>user_id = value</code>
     */
    public com.getReferral.Referral.Application.jooq.tables.pojos.Referrer fetchOneByUserId(Integer value) {
        return fetchOne(Referrer.REFERRER.USER_ID, value);
    }

    /**
     * Fetch a unique record that has <code>user_id = value</code>
     */
    public Optional<com.getReferral.Referral.Application.jooq.tables.pojos.Referrer> fetchOptionalByUserId(Integer value) {
        return fetchOptional(Referrer.REFERRER.USER_ID, value);
    }
}
